<?php
namespace Cake3Kendo\Model\Behavior;

use Cake\ORM\Behavior;
use App\Model\Table;
use Cake\ORM\TableRegistry;
use Cake\Utility\Inflector;


class KendoBehavior extends Behavior{

    private $dataTypes = array(
        "integer" => "number",
        "decimal" => "number",
        "double" => "number",
        "string" => "string",
        "datetime" => "date",
        "date" => "date",
        "float" => "number",
        "text" => "string",
        "boolean" => "boolean",
        "timestamp" => "date"
    );

    public $tableAlise = null;

    public function initialize(array $config){
        parent::initialize($config); // TODO: Change the autogenerated stub
    }




    public function makeKendoModel(){
        $tableAlias = $this->_table->alias();
        $tableObj = TableRegistry::get($tableAlias);
        $schema = $tableObj->schema();

        $kendoModelArr = array();

        //change data type based on kendo ui database
        foreach($schema->columns() as $ix=>$field){
            $kendoModelArr[$field] =  $schema->column($field);
            if(isset($this->dataTypes[$schema->column($field)['type']])){
                $kendoModelArr[$field]['type'] = $this->dataTypes[$schema->column($field)['type']];
            }
        }

        return array('id'=>$this->_table->primaryKey(),'fields'=>$kendoModelArr);
    }




    public function makeKendoGridCols(){
        $tableAlias = $this->_table->alias();
        $tableObj = TableRegistry::get($tableAlias);
        $schema = $tableObj->schema();

        $cols = array();
        $c = 0;

        foreach($schema->columns() as $idx=>$field){

            if(isset($tableObj->kendoOverrideColumns[$field])){
                $cols[$c] = $tableObj->kendoOverrideColumns[$field];
                continue;
            }

            if(in_array($field,$tableObj->kendoGridHide)){
                $cols[$c]['hidden'] = true;
            }

            if(in_array($field,$tableObj->kendoGridDontShow)){
              continue;
            }

            $cols[$c]['lockable'] = false;
            $cols[$c]['field'] =  $field;
            $cols[$c]['title'] = Inflector::humanize($field);
            $c++;
        }
        //pr($cols);exit;
        return $cols;

    }
}

